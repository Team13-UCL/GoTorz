@page "/packages/details"
@using Microsoft.EntityFrameworkCore
@using GoTorz.Model
@inject IDbContextFactory<GoTorz.Data.GoTorzContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Package</h2>
    <hr />
    @if (package is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Plane ID</dt>
            <dd class="col-sm-10">@package.PlaneId</dd>
            <dt class="col-sm-2">Hotel ID</dt>
            <dd class="col-sm-10">@package.HotelId</dd>
            <dt class="col-sm-2">Return Plane ID</dt>
            <dd class="col-sm-10">@package.ReturnPlaneID</dd>
            <dt class="col-sm-2">Start Date</dt>
            <dd class="col-sm-10">@package.Plane.StartDate</dd>
            <dt class="col-sm-2">Departure Airport</dt>
            <dd class="col-sm-10">@package.Plane.DepartureAirport</dd>
            <dt class="col-sm-2">Arrival Airport</dt>
            <dd class="col-sm-10">@package.Plane.ArrivalAirport</dd>
            <dt class="col-sm-2">Carrier Code</dt>
            <dd class="col-sm-10">@package.Plane.CarrierCode</dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@package.Plane.Price</dd>
            <dt class="col-sm-2">Return Date</dt>
            <dd class="col-sm-10">@package.ReturnPlane.ReturnDate</dd>
            <dt class="col-sm-2">Duration</dt>
            <dd class="col-sm-10">@package.ReturnPlane.Duration</dd>
            <dt class="col-sm-2">Hotel Name</dt>
            <dd class="col-sm-10">@package.Hotels.Name</dd>
            <dt class="col-sm-2">Hotel Price</dt>
            <dd class="col-sm-10">@package.Hotels.Price</dd>
            <dt class="col-sm-2">Check-In Date</dt>
            <dd class="col-sm-10">@package.Hotels.CheckInDate</dd>
            <dt class="col-sm-2">Check-Out Date</dt>
            <dd class="col-sm-10">@package.Hotels.CheckOutDate</dd>
        </dl>
        <div>
            <a href="@($"/packages/edit?planeid={package.PlaneId}")">Edit</a> |
            <a href="@($"/packages")">Back to List</a>
        </div>
    }
</div>

@code {
    private Package? package;

    [SupplyParameterFromQuery]
    private int PlaneId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        package = await context.Package
            .Include(p => p.Plane)
            .Include(p => p.ReturnPlane)
            .Include(p => p.Hotels)
            .FirstOrDefaultAsync(m => m.PlaneId == PlaneId);

        if (package is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
