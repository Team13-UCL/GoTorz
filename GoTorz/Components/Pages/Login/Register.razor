@using System.ComponentModel.DataAnnotations
@using System.ComponentModel.DataAnnotations.Schema
@using GoTorz.Components.Shared
@using GoTorz.Data
@using GoTorz.Model
@using GoTorz.Services
@using static GoTorz.Components.Pages.Login.Login

@*Makes the component accessible at /Register*@
@page "/Register"

@inject NavigationManager Navigation
@inject UserService userService
@rendermode InteractiveServer

<body style="background-color: #0F52BA; margin: 0; padding: 0;">
</body>

<section class="vh-100" style="background-color: #0F52BA;">
  <div class="container h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-lg-12 col-xl-11">
        <div class="card text-black" style="border-radius: 25px;">
          <div class="card-body p-md-5">
            <div class="row justify-content-center">
              <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>

                <Alert @ref="alert" />

                <EditForm Model="Input" OnValidSubmit="RegisterUser">
                  <DataAnnotationsValidator />
                  <ValidationSummary />

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-user fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label">Your Name</label>
                      <InputText @bind-Value="Input.Name" class="form-control" />
                      <ValidationMessage For="() => Input.Name" class="text-danger" />
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-phone fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label">Phone Number</label>
                      <InputText @bind-Value="Input.PhoneNumber" class="form-control" />
                      <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label">Your Email</label>
                      <InputText @bind-Value="Input.Email" class="form-control" />
                      <ValidationMessage For="() => Input.Email" class="text-danger" />
                    </div>
                  </div>

                  <div class="d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label">Password</label>
                      <InputText @bind-Value="Input.Password" type="password" class="form-control" />
                      <ValidationMessage For="() => Input.Password" class="text-danger" />
                    </div>
                  </div>

                  <div class="form-check d-flex justify-content-center mb-5">
                    <input class="form-check-input me-2" type="checkbox" id="termsCheck" required />
                    <label class="form-check-label" for="termsCheck">
                      I agree all statements in <a href="#">Terms of service</a>
                    </label>
                  </div>

                  <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                    <button type="submit" class="btn btn-primary btn-lg">Register</button>
                  </div>
                </EditForm>

              </div>
              <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                     class="img-fluid" alt="Sample image" />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

@code {
    private Alert alert;


    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    public async void RegisterUser()
    {
        string hashedPassword = PasswordHelper.HashPassword(Input.Password);

        bool result = userService.SaveUser(
            new User
            {
                Name = Input.Name,
                PhoneNumber = Input.PhoneNumber,
                Email = Input.Email,
                    Password = hashedPassword,
                Role = "Customer"
            }
        );

        if (result)
        {
            //Register success
            alert.ShowSuccess("Register Successfully");
            await Task.Delay(3000); // Delay for 3 seconds
            Navigation.NavigateTo("/Login");
        }
        else
        {
            //register failed
            alert.ShowFailed("Register Failed");
        }
    }

    // [Required] Field must be filled. [EmailAddress]: Ensures a valid email format. 
    // [DataType(DataType.Password)]: Makes sure that Password is treated as a Password
    private sealed class InputModel
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int UserID { get; set; }

        [Required]
        public string Name { get; set; } = "";

        [Required]
        [Phone]
        public string PhoneNumber { get; set; } = "";

        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        public string Role { get; set; } = "Customer";
    }
}